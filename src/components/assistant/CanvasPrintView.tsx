
import React from 'react';
import { Button } from '@/components/ui/button';
import { Printer, X } from 'lucide-react';
import { format } from 'date-fns';

interface CanvasPrintViewProps {
  content: string;
  title: string;
  onClose: () => void;
}

const CanvasPrintView: React.FC<CanvasPrintViewProps> = ({
  content,
  title,
  onClose
}) => {
  const handlePrint = () => {
    window.print();
  };

  // Extract metadata from content
  const getDocumentMetadata = () => {
    const lines = content.split('\n');
    const firstLine = lines[0]?.replace(/^#\s*/, '') || title;
    return {
      title: firstLine,
      generatedDate: format(new Date(), 'MMM d, yyyy'),
      pageCount: Math.ceil(content.length / 3000) // Rough estimate
    };
  };

  // Process markdown content into structured sections
  const processMarkdownContent = () => {
    const lines = content.split('\n');
    const sections = [];
    let currentSection = '';
    let isInCodeBlock = false;

    for (const line of lines) {
      // Track code blocks to avoid breaking them
      if (line.trim().startsWith('```')) {
        isInCodeBlock = !isInCodeBlock;
      }

      // Create section breaks on major headers
      if (line.startsWith('# ') && !isInCodeBlock && currentSection.length > 0) {
        sections.push(currentSection);
        currentSection = line + '\n';
      } else {
        currentSection += line + '\n';
      }
    }

    if (currentSection.trim()) {
      sections.push(currentSection);
    }

    return sections.length > 0 ? sections : [content];
  };

  // Convert markdown to HTML for printing
  const markdownToHtml = (markdown: string) => {
    return markdown
      // Headers
      .replace(/^### (.*$)/gm, '<h3 class="print-title-3">$1</h3>')
      .replace(/^## (.*$)/gm, '<h2 class="print-title-2">$1</h2>')
      .replace(/^# (.*$)/gm, '<h1 class="print-title-1">$1</h1>')
      // Bold and italic
      .replace(/\*\*([^*]+)\*\*/g, '<strong>$1</strong>')
      .replace(/\*([^*]+)\*/g, '<em>$1</em>')
      // Lists
      .replace(/^\* (.*)$/gm, '<li>$1</li>')
      .replace(/(<li>.*<\/li>)/s, '<ul>$1</ul>')
      // Paragraphs
      .replace(/^(?!<[hul]|<\/[hul])(.+)$/gm, '<p class="print-body">$1</p>')
      // Code blocks
      .replace(/```(\w+)?\n([\s\S]*?)```/g, '<pre class="print-code-block"><code>$2</code></pre>')
      // Line breaks
      .replace(/\n/g, '<br>');
  };

  const metadata = getDocumentMetadata();
  const sections = processMarkdownContent();

  return (
    <div className="min-h-screen bg-white">
      {/* Print controls - hidden when printing */}
      <div className="print:hidden fixed top-4 right-4 z-50 flex gap-2">
        <Button onClick={handlePrint} className="flex items-center gap-2">
          <Printer className="h-4 w-4" />
          Print / Save as PDF
        </Button>
        <Button variant="outline" onClick={onClose} className="flex items-center gap-2">
          <X className="h-4 w-4" />
          Close
        </Button>
      </div>

      {/* Force light theme for print content */}
      <div className="light">
        {/* Print content container */}
        <div className="bg-white text-gray-900 min-h-screen">
          
          {/* Cover Page */}
          <div className="print-cover-page min-h-screen flex flex-col justify-between p-8">
            {/* Header */}
            <div className="print-header">
              <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg mb-4"></div>
              <h3 className="text-lg font-semibold text-gray-600">AI Generated Report</h3>
            </div>

            {/* Main Content */}
            <div className="flex-1 flex flex-col justify-center text-center space-y-8">
              <div>
                <h1 className="print-title-1 mb-6">{metadata.title}</h1>
                <p className="text-lg text-gray-600 mb-8">AI Assistant Generated Document</p>
              </div>

              {/* Document Info */}
              <div className="bg-gray-50 rounded-2xl p-8 mx-auto max-w-md">
                <div className="space-y-2 text-gray-600">
                  <p><strong>Generated:</strong> {metadata.generatedDate}</p>
                  <p><strong>Document Type:</strong> AI Report</p>
                  <p><strong>Estimated Pages:</strong> {metadata.pageCount}</p>
                </div>
              </div>
            </div>

            {/* Footer */}
            <div className="print-footer space-y-2">
              <div className="text-center text-sm">
                <p className="font-medium text-blue-600">AI GENERATED CONTENT</p>
                <p>This document was generated by AI assistant.</p>
              </div>
            </div>
          </div>

          {/* Content Sections */}
          {sections.map((section, index) => (
            <div key={index} className="print-section print-page-break p-8">
              <div 
                className="prose prose-gray max-w-none"
                dangerouslySetInnerHTML={{ 
                  __html: markdownToHtml(section) 
                }}
              />
            </div>
          ))}
        </div>
      </div>

      {/* Enhanced Print Styles */}
      <style>{`
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
        
        .light {
          color-scheme: light !important;
        }
        
        @media print {
          @page {
            size: A4;
            margin: 1.5cm 2cm 2cm 2cm;
            @bottom-center {
              content: counter(page);
              font-family: 'Inter', sans-serif;
              font-size: 10pt;
              color: #6b7280;
            }
            @bottom-left {
              content: "AI Generated Report";
              font-family: 'Inter', sans-serif;
              font-size: 10pt;
              color: #6b7280;
            }
            @bottom-right {
              content: "${metadata.generatedDate}";
              font-family: 'Inter', sans-serif;
              font-size: 10pt;
              color: #6b7280;
            }
          }
          
          * {
            -webkit-print-color-adjust: exact;
            color-adjust: exact;
            box-sizing: border-box;
            background-color: white !important;
            color: #1f2937 !important;
          }
          
          body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            font-size: 11pt;
            line-height: 1.5;
            color: #1f2937 !important;
            background: white !important;
            margin: 0;
            padding: 0;
          }
          
          .print\\:hidden {
            display: none !important;
          }
          
          .print-cover-page {
            min-height: 100vh;
            break-after: page;
            background: white !important;
            color: #1f2937 !important;
          }
          
          .print-page-break {
            break-before: page;
          }
          
          .print-section {
            margin-bottom: 24pt;
            break-inside: avoid;
            background: white !important;
          }
          
          .print-title-1 {
            font-size: 24pt;
            font-weight: 700;
            line-height: 1.2;
            color: #111827 !important;
            margin-bottom: 24pt;
          }
          
          .print-title-2 {
            font-size: 18pt;
            font-weight: 600;
            line-height: 1.3;
            color: #1f2937 !important;
            margin-top: 20pt;
            margin-bottom: 12pt;
            border-bottom: 2pt solid #e5e7eb;
            padding-bottom: 6pt;
            break-after: avoid;
          }
          
          .print-title-3 {
            font-size: 14pt;
            font-weight: 600;
            line-height: 1.4;
            color: #374151 !important;
            margin-top: 16pt;
            margin-bottom: 8pt;
            break-after: avoid;
          }
          
          .print-body {
            font-size: 11pt;
            line-height: 1.6;
            color: #4b5563 !important;
            margin-bottom: 12pt;
          }
          
          .print-header {
            border-bottom: 2pt solid #e5e7eb;
            padding-bottom: 12pt;
            margin-bottom: 24pt;
            background: white !important;
            color: #1f2937 !important;
          }
          
          .print-footer {
            border-top: 1pt solid #e5e7eb;
            padding-top: 12pt;
            margin-top: 24pt;
            font-size: 9pt;
            color: #6b7280 !important;
            text-align: center;
            background: white !important;
          }
          
          .print-code-block {
            background: #f8fafc !important;
            border: 1pt solid #e2e8f0;
            border-radius: 4pt;
            padding: 12pt;
            font-family: 'Courier New', monospace;
            font-size: 9pt;
            margin: 12pt 0;
            break-inside: avoid;
            color: #1f2937 !important;
          }
          
          ul {
            margin: 12pt 0;
            padding-left: 24pt;
          }
          
          li {
            margin-bottom: 4pt;
            color: #4b5563 !important;
          }
          
          strong {
            font-weight: 600;
            color: #1f2937 !important;
          }
          
          em {
            font-style: italic;
            color: #374151 !important;
          }
          
          /* Keep content blocks together */
          h1, h2, h3 {
            break-after: avoid;
            orphans: 4;
            widows: 4;
          }
          
          p {
            orphans: 3;
            widows: 3;
          }
          
          .prose {
            max-width: none !important;
          }
        }
      `}</style>
    </div>
  );
};

export default CanvasPrintView;
